(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[2087],{"./node_modules/math-expression-evaluator/src/formula_evaluator.js":(module,__unused_webpack_exports,__webpack_require__)=>{var Mexp=__webpack_require__("./node_modules/math-expression-evaluator/src/postfix_evaluator.js");Mexp.prototype.formulaEval=function(){"use strict";for(var pop1,pop2,pop3,disp=[],arr=this.value,i=0;i<arr.length;i++)1===arr[i].type||3===arr[i].type?disp.push({value:3===arr[i].type?arr[i].show:arr[i].value,type:1}):13===arr[i].type?disp.push({value:arr[i].show,type:1}):0===arr[i].type?disp[disp.length-1]={value:arr[i].show+("-"!=arr[i].show?"(":"")+disp[disp.length-1].value+("-"!=arr[i].show?")":""),type:0}:7===arr[i].type?disp[disp.length-1]={value:(1!=disp[disp.length-1].type?"(":"")+disp[disp.length-1].value+(1!=disp[disp.length-1].type?")":"")+arr[i].show,type:7}:10===arr[i].type?(pop1=disp.pop(),pop2=disp.pop(),"P"===arr[i].show||"C"===arr[i].show?disp.push({value:"<sup>"+pop2.value+"</sup>"+arr[i].show+"<sub>"+pop1.value+"</sub>",type:10}):disp.push({value:(1!=pop2.type?"(":"")+pop2.value+(1!=pop2.type?")":"")+"<sup>"+pop1.value+"</sup>",type:1})):2===arr[i].type||9===arr[i].type?(pop1=disp.pop(),pop2=disp.pop(),disp.push({value:(1!=pop2.type?"(":"")+pop2.value+(1!=pop2.type?")":"")+arr[i].show+(1!=pop1.type?"(":"")+pop1.value+(1!=pop1.type?")":""),type:arr[i].type})):12===arr[i].type&&(pop1=disp.pop(),pop2=disp.pop(),pop3=disp.pop(),disp.push({value:arr[i].show+"("+pop3.value+","+pop2.value+","+pop1.value+")",type:12}));return disp[0].value},module.exports=Mexp},"./node_modules/math-expression-evaluator/src/lexer.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var Mexp=__webpack_require__("./node_modules/math-expression-evaluator/src/math_function.js");function inc(arr,val){for(var i=0;i<arr.length;i++)arr[i]+=val;return arr}var token=["sin","cos","tan","pi","(",")","P","C"," ","asin","acos","atan","7","8","9","int","cosh","acosh","ln","^","root","4","5","6","/","!","tanh","atanh","Mod","1","2","3","*","sinh","asinh","e","log","0",".","+","-",",","Sigma","n","Pi","pow"],show=["sin","cos","tan","&pi;","(",")","P","C"," ","asin","acos","atan","7","8","9","Int","cosh","acosh"," ln","^","root","4","5","6","&divide;","!","tanh","atanh"," Mod ","1","2","3","&times;","sinh","asinh","e"," log","0",".","+","-",",","&Sigma;","n","&Pi;","pow"],eva=[Mexp.math.sin,Mexp.math.cos,Mexp.math.tan,"PI","(",")",Mexp.math.P,Mexp.math.C," ".anchor,Mexp.math.asin,Mexp.math.acos,Mexp.math.atan,"7","8","9",Math.floor,Mexp.math.cosh,Mexp.math.acosh,Math.log,Math.pow,Math.sqrt,"4","5","6",Mexp.math.div,Mexp.math.fact,Mexp.math.tanh,Mexp.math.atanh,Mexp.math.mod,"1","2","3",Mexp.math.mul,Mexp.math.sinh,Mexp.math.asinh,"E",Mexp.math.log,"0",".",Mexp.math.add,Mexp.math.sub,",",Mexp.math.sigma,"n",Mexp.math.Pi,Math.pow],preced={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,9:1,10:10,11:0,12:11,13:0,14:-1},type=[0,0,0,3,4,5,10,10,14,0,0,0,1,1,1,0,0,0,0,10,0,1,1,1,2,7,0,0,2,1,1,1,2,0,0,3,0,1,6,9,9,11,12,13,12,8],type0={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,9:!0,12:!0,13:!0,14:!0},type1={0:!0,1:!0,2:!0,3:!0,4:!0,5:!0,6:!0,7:!0,8:!0,9:!0,10:!0,11:!0,12:!0,13:!0},type1Asterick={0:!0,3:!0,4:!0,8:!0,12:!0,13:!0},empty={},type3Asterick={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,12:!0,13:!0},type6={1:!0},newAr=[[],["1","2","3","7","8","9","4","5","6","+","-","*","/","(",")","^","!","P","C","e","0",".",",","n"," "],["pi","ln","Pi"],["sin","cos","tan","Del","int","Mod","log","pow"],["asin","acos","atan","cosh","root","tanh","sinh"],["acosh","atanh","asinh","Sigma"]];function match(str1,str2,i,x){for(var f=0;f<x;f++)if(str1[i+f]!==str2[f])return!1;return!0}Mexp.addToken=function(tokens){for(var i=0;i<tokens.length;i++){var x=tokens[i].token.length,temp=-1;newAr[x]=newAr[x]||[];for(var y=0;y<newAr[x].length;y++)if(tokens[i].token===newAr[x][y]){temp=token.indexOf(newAr[x][y]);break}-1===temp?(token.push(tokens[i].token),type.push(tokens[i].type),newAr.length<=tokens[i].token.length&&(newAr[tokens[i].token.length]=[]),newAr[tokens[i].token.length].push(tokens[i].token),eva.push(tokens[i].value),show.push(tokens[i].show)):(token[temp]=tokens[i].token,type[temp]=tokens[i].type,eva[temp]=tokens[i].value,show[temp]=tokens[i].show)}},Mexp.lex=function(inp,tokens){var i,changeSignObj={value:Mexp.math.changeSign,type:0,pre:21,show:"-"},closingParObj={value:")",show:")",type:5,pre:0},openingParObj={value:"(",type:4,pre:0,show:"("},str=[openingParObj],ptc=[],inpStr=inp,allowed=type0,bracToClose=0,asterick=empty,prevKey="";void 0!==tokens&&Mexp.addToken(tokens);var obj={},nodes=function tokenize(string){for(var key,x,y,nodes=[],length=string.length,i=0;i<length;i++)if(!(i<length-1&&" "===string[i]&&" "===string[i+1])){for(key="",x=string.length-i>newAr.length-2?newAr.length-1:string.length-i;x>0;x--)if(void 0!==newAr[x])for(y=0;y<newAr[x].length;y++)match(string,newAr[x][y],i,x)&&(key=newAr[x][y],y=newAr[x].length,x=0);if(i+=key.length-1,""===key)throw new Mexp.Exception("Can't understand after "+string.slice(i));var index=token.indexOf(key);nodes.push({index,token:key,type:type[index],eval:eva[index],precedence:preced[type[index]],show:show[index]})}return nodes}(inpStr);for(i=0;i<nodes.length;i++){var node=nodes[i];if(14!==node.type){var j,cToken=node.token,cType=node.type,cEv=node.eval,cPre=node.precedence,cShow=node.show,pre=str[str.length-1];for(j=ptc.length;j--&&0===ptc[j];)if(-1!==[0,2,3,4,5,9,11,12,13].indexOf(cType)){if(!0!==allowed[cType])throw new Mexp.Exception(cToken+" is not allowed after "+prevKey);str.push(closingParObj),allowed=type1,asterick=type3Asterick,inc(ptc,-1).pop()}if(!0!==allowed[cType])throw new Mexp.Exception(cToken+" is not allowed after "+prevKey);if(!0===asterick[cType]&&(cType=2,cEv=Mexp.math.mul,cShow="&times;",cPre=3,i-=1),obj={value:cEv,type:cType,pre:cPre,show:cShow},0===cType)allowed=type0,asterick=empty,inc(ptc,2).push(2),str.push(obj),str.push(openingParObj);else if(1===cType)1===pre.type?(pre.value+=cEv,inc(ptc,1)):str.push(obj),allowed=type1,asterick=type1Asterick;else if(2===cType)allowed=type0,asterick=empty,inc(ptc,2),str.push(obj);else if(3===cType)str.push(obj),allowed=type1,asterick=type3Asterick;else if(4===cType)inc(ptc,1),bracToClose++,allowed=type0,asterick=empty,str.push(obj);else if(5===cType){if(!bracToClose)throw new Mexp.Exception("Closing parenthesis are more than opening one, wait What!!!");bracToClose--,allowed=type1,asterick=type3Asterick,str.push(obj),inc(ptc,1)}else if(6===cType){if(pre.hasDec)throw new Mexp.Exception("Two decimals are not allowed in one number");1!==pre.type&&(pre={value:0,type:1,pre:0},str.push(pre),inc(ptc,-1)),allowed=type6,inc(ptc,1),asterick=empty,pre.value+=cEv,pre.hasDec=!0}else 7===cType&&(allowed=type1,asterick=type3Asterick,inc(ptc,1),str.push(obj));8===cType?(allowed=type0,asterick=empty,inc(ptc,4).push(4),str.push(obj),str.push(openingParObj)):9===cType?(9===pre.type?pre.value===Mexp.math.add?(pre.value=cEv,pre.show=cShow,inc(ptc,1)):pre.value===Mexp.math.sub&&"-"===cShow&&(pre.value=Mexp.math.add,pre.show="+",inc(ptc,1)):5!==pre.type&&7!==pre.type&&1!==pre.type&&3!==pre.type&&13!==pre.type?"-"===cToken&&(allowed=type0,asterick=empty,inc(ptc,2).push(2),str.push(changeSignObj),str.push(openingParObj)):(str.push(obj),inc(ptc,2)),allowed=type0,asterick=empty):10===cType?(allowed=type0,asterick=empty,inc(ptc,2),str.push(obj)):11===cType?(allowed=type0,asterick=empty,str.push(obj)):12===cType?(allowed=type0,asterick=empty,inc(ptc,6).push(6),str.push(obj),str.push(openingParObj)):13===cType&&(allowed=type1,asterick=type3Asterick,str.push(obj)),inc(ptc,-1),prevKey=cToken}else if(i>0&&i<nodes.length-1&&1===nodes[i+1].type&&(1===nodes[i-1].type||6===nodes[i-1].type))throw new Mexp.Exception("Unexpected Space")}for(j=ptc.length;j--&&0===ptc[j];)str.push(closingParObj),inc(ptc,-1).pop();if(!0!==allowed[5])throw new Mexp.Exception("complete the expression");for(;bracToClose--;)str.push(closingParObj);return str.push(closingParObj),new Mexp(str)},module.exports=Mexp},"./node_modules/math-expression-evaluator/src/math_function.js":module=>{"use strict";var Mexp=function(parsed){this.value=parsed};Mexp.math={isDegree:!0,acos:function(x){return Mexp.math.isDegree?180/Math.PI*Math.acos(x):Math.acos(x)},add:function(a,b){return a+b},asin:function(x){return Mexp.math.isDegree?180/Math.PI*Math.asin(x):Math.asin(x)},atan:function(x){return Mexp.math.isDegree?180/Math.PI*Math.atan(x):Math.atan(x)},acosh:function(x){return Math.log(x+Math.sqrt(x*x-1))},asinh:function(x){return Math.log(x+Math.sqrt(x*x+1))},atanh:function(x){return Math.log((1+x)/(1-x))},C:function(n,r){var pro=1,other=n-r,choice=r;choice<other&&(choice=other,other=r);for(var i=choice+1;i<=n;i++)pro*=i;return pro/Mexp.math.fact(other)},changeSign:function(x){return-x},cos:function(x){return Mexp.math.isDegree&&(x=Mexp.math.toRadian(x)),Math.cos(x)},cosh:function(x){return(Math.pow(Math.E,x)+Math.pow(Math.E,-1*x))/2},div:function(a,b){return a/b},fact:function(n){if(n%1!=0)return"NaN";for(var pro=1,i=2;i<=n;i++)pro*=i;return pro},inverse:function(x){return 1/x},log:function(i){return Math.log(i)/Math.log(10)},mod:function(a,b){return a%b},mul:function(a,b){return a*b},P:function(n,r){for(var pro=1,i=Math.floor(n)-Math.floor(r)+1;i<=Math.floor(n);i++)pro*=i;return pro},Pi:function(low,high,ex){for(var pro=1,i=low;i<=high;i++)pro*=Number(ex.postfixEval({n:i}));return pro},pow10x:function(e){for(var x=1;e--;)x*=10;return x},sigma:function(low,high,ex){for(var sum=0,i=low;i<=high;i++)sum+=Number(ex.postfixEval({n:i}));return sum},sin:function(x){return Mexp.math.isDegree&&(x=Mexp.math.toRadian(x)),Math.sin(x)},sinh:function(x){return(Math.pow(Math.E,x)-Math.pow(Math.E,-1*x))/2},sub:function(a,b){return a-b},tan:function(x){return Mexp.math.isDegree&&(x=Mexp.math.toRadian(x)),Math.tan(x)},tanh:function(x){return Mexp.sinha(x)/Mexp.cosha(x)},toRadian:function(x){return x*Math.PI/180}},Mexp.Exception=function(message){this.message=message},module.exports=Mexp},"./node_modules/math-expression-evaluator/src/postfix.js":(module,__unused_webpack_exports,__webpack_require__)=>{var Mexp=__webpack_require__("./node_modules/math-expression-evaluator/src/lexer.js");Mexp.prototype.toPostfix=function(){"use strict";for(var elem,popped,prep,pre,ele,post=[],stack=[{value:"(",type:4,pre:0}],arr=this.value,i=1;i<arr.length;i++)if(1===arr[i].type||3===arr[i].type||13===arr[i].type)1===arr[i].type&&(arr[i].value=Number(arr[i].value)),post.push(arr[i]);else if(4===arr[i].type)stack.push(arr[i]);else if(5===arr[i].type)for(;4!==(popped=stack.pop()).type;)post.push(popped);else if(11===arr[i].type){for(;4!==(popped=stack.pop()).type;)post.push(popped);stack.push(popped)}else{pre=(elem=arr[i]).pre,prep=(ele=stack[stack.length-1]).pre;var flag="Math.pow"==ele.value&&"Math.pow"==elem.value;if(pre>prep)stack.push(elem);else{for(;prep>=pre&&!flag||flag&&pre<prep;)popped=stack.pop(),ele=stack[stack.length-1],post.push(popped),prep=ele.pre,flag="Math.pow"==elem.value&&"Math.pow"==ele.value;stack.push(elem)}}return new Mexp(post)},module.exports=Mexp},"./node_modules/math-expression-evaluator/src/postfix_evaluator.js":(module,__unused_webpack_exports,__webpack_require__)=>{var Mexp=__webpack_require__("./node_modules/math-expression-evaluator/src/postfix.js");Mexp.prototype.postfixEval=function(UserDefined){"use strict";(UserDefined=UserDefined||{}).PI=Math.PI,UserDefined.E=Math.E;for(var pop1,pop2,pop3,stack=[],arr=this.value,bool=void 0!==UserDefined.n,i=0;i<arr.length;i++)1===arr[i].type?stack.push({value:arr[i].value,type:1}):3===arr[i].type?stack.push({value:UserDefined[arr[i].value],type:1}):0===arr[i].type||7===arr[i].type?void 0===stack[stack.length-1].type?stack[stack.length-1].value.push(arr[i]):stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value):8===arr[i].type?(pop1=stack.pop(),pop2=stack.pop(),stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)})):10===arr[i].type?(pop1=stack.pop(),void 0===(pop2=stack.pop()).type?(pop2.value=pop2.concat(pop1),pop2.value.push(arr[i]),stack.push(pop2)):void 0===pop1.type?(pop1.unshift(pop2),pop1.push(arr[i]),stack.push(pop1)):stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)})):2===arr[i].type||9===arr[i].type?(pop1=stack.pop(),void 0===(pop2=stack.pop()).type?((pop2=pop2.concat(pop1)).push(arr[i]),stack.push(pop2)):void 0===pop1.type?(pop1.unshift(pop2),pop1.push(arr[i]),stack.push(pop1)):stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)})):12===arr[i].type?(void 0!==(pop1=stack.pop()).type&&(pop1=[pop1]),pop2=stack.pop(),pop3=stack.pop(),stack.push({type:1,value:arr[i].value(pop3.value,pop2.value,new Mexp(pop1))})):13===arr[i].type&&(bool?stack.push({value:UserDefined[arr[i].value],type:3}):stack.push([arr[i]]));if(stack.length>1)throw new Mexp.Exception("Uncaught Syntax error");return stack[0].value>1e15?"Infinity":parseFloat(stack[0].value.toFixed(15))},Mexp.eval=function(str,tokens,obj){return void 0===tokens?this.lex(str).toPostfix().postfixEval():void 0===obj?void 0!==tokens.length?this.lex(str,tokens).toPostfix().postfixEval():this.lex(str).toPostfix().postfixEval(tokens):this.lex(str,tokens).toPostfix().postfixEval(obj)},module.exports=Mexp}}]);